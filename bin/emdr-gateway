#!/usr/bin/env python
"""
WSGI gateway application. Runs using bottle+gevent.
"""
from logging.config import dictConfig
import argparse
from bottle import run
from emdr.conf import default_settings as settings
from emdr.core.command_utils import set_logger_level, print_cmd_header, print_cmd_footer

parser = argparse.ArgumentParser(
    description="The gateway accepts uploads from player uploader clients " \
                "over HTTP. Market data is then sent to the broker.",
)
parser.add_argument(
    '--sender', action='append', dest='senders',
    help="Overrides default gateway sender bindings. This determines where " \
         "the gateway sends its messages, typically an Announcer.")
parser.add_argument(
    '--loglevel', action='store', dest='loglevel', default='INFO',
    help="Overrides default logger level (DEBUG, INFO, WARNING, ERROR) "
         "(default: %s)" % settings.LOGGING['loggers']['']['level'])
parser.add_argument(
    '--webport', action='store', dest='web_port',
    help="Overrides default webserver port "
         "(default: %s)" % settings.GATEWAY_WEB_PORT)
parser.add_argument(
    '--ip-key-salt', action='store', dest='ip_key_salt',
    help="If provided, set a salted hash of each uploader's IP address as " \
         "the EMDR upload key. Used for consumers to track problematic uploaders.")

parsed = parser.parse_args()

print_cmd_header('emdr-gateway')

if parsed.senders:
    settings.GATEWAY_SENDER_BINDINGS = parsed.senders
if parsed.web_port:
    settings.GATEWAY_WEB_PORT = parsed.web_port
if parsed.ip_key_salt:
    settings.GATEWAY_IP_KEY_SALT = str(parsed.ip_key_salt)

log_level = set_logger_level(parsed.loglevel)
print("* Logging level: %s" % log_level)

print("* Listening for HTTP market data on port: %s" % settings.GATEWAY_WEB_PORT)

print("* Sending market data over PUB to Announcers:")
for binding in settings.GATEWAY_SENDER_BINDINGS:
    print("  - %s" % binding)

print_cmd_footer()

dictConfig(settings.LOGGING)

#noinspection PyUnresolvedReferences
from emdr.daemons.gateway import wsgi
# Fire up a bottle+gevent process.
run(
    host='localhost',
    server='gevent',
    port=settings.GATEWAY_WEB_PORT,
    # Do gevent's standard monkey patching.
    monkey=True,
    # Use libevent HTTP server.
    fast=True
)